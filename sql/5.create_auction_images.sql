-- Set up table
create table auction_images (
  id bigint generated by default as identity primary key,
  auction_id bigint references public.auctions not null,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- Set row level security
alter table auction_images enable row level security;

create policy "Auction images are public."
  on auction_images
  for select using (
    true
  );

create policy "Users can create images for their auction."
  on auction_images
  for insert with check (
    auth.uid() in (
      select owner_id from auctions
      where id = auction_id
    )
  );

create policy "Users can delete images from their auction."
  on auction_images
  for delete using (
    auth.uid() in (
      select owner_id from auctions
      where id = auction_id
    )
  );

-- Set up storage
insert into storage.buckets (id, name)
  values ('auction_images', 'auction_images');

-- Set row level security
create policy "Users can add auction images to their folder"
  on storage.objects
  for insert with check (
    (bucket_id = 'auction-images':: text)
    and ((uid()):: text = (storage.foldername(name)) [ 1 ])
  );

create policy "Users can delete images from their folder"
  on storage.objects
  for delete using (
    (bucket_id = 'auction-images':: text)
    and ((uid()):: text = (storage.foldername(name)) [ 1 ])
  );
