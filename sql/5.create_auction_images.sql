create table auction_images (
  id bigint generated by default as identity primary key,
  auction_id bigint references public.auctions not null,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- Set row level security
alter table auction_images enable row level security;

create policy "Users can insert auction images." on auction_images for
    insert with check ( role() = 'authenticated'::text )

create policy "Auction images are public." on auctions for
    select using (true);

create policy "User can create an auction image" on auction_images for
  insert with check ( role() = 'authenticated'::text )

-- Set up Storage!
-- insert into storage.buckets (id, name)
-- values ('auction_images', 'auction_images');

-- create policy "Auction images are publicly accessible." on storage.objects for
--   select using ( bucket_id = 'auction_images' );

-- create policy "Anyone can upload an auction image." on storage.objects for
--   insert with check ( bucket_id = 'auction_images' );

-- create policy "Anyone can update an auction image." on storage.objects for
--   update with check ( bucket_id = 'auction_images' );
